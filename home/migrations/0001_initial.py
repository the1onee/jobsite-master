# Generated by Django 4.1.2 on 2023-01-17 15:44

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_name', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='catagry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('software_developer', 'Software Developer'), ('data_scientist', 'Data Scientist'), ('network_engineer', 'Network Engineer'), ('information_security_analyst', 'Information Security Analyst'), ('technical_support_specialist', 'Technical Support Specialist'), ('systems_administrator', 'Systems Administrator'), ('technical_project_manager', 'Technical Project Manager'), ('ux_designer', 'User Experience Designer'), ('technical_writer', 'Technical Writer'), ('it_manager', 'IT Manager'), ('cloud_engineer', 'Cloud Engineer'), ('devops_engineer', 'DevOps Engineer'), ('qa_engineer', 'Quality Assurance Engineer'), ('business_analyst', 'Business Analyst'), ('database_administrator', 'Database Administrator'), ('mobile_app_developer', 'Mobile App Developer'), ('game_developer', 'Game Developer'), ('ai_engineer', 'Artificial Intelligence Engineer'), ('machine_learning_engineer', 'Machine Learning Engineer'), ('robotics_engineer', 'Robotics Engineer')], max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('email', models.EmailField(max_length=64, verbose_name='email')),
                ('meassg', models.TextField(max_length=64, verbose_name='message')),
            ],
        ),
        migrations.CreateModel(
            name='Mohmed',
            fields=[
                ('name', models.CharField(max_length=50, verbose_name='name:')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('img', models.ImageField(blank=True, null=True, upload_to='profile', verbose_name='img')),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='slug')),
                ('skis_name', models.TextField(blank=True, null=True, verbose_name='skills')),
                ('aboutme', models.TextField(blank=True, null=True, verbose_name='about me ')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='phone')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='your address')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('dgree', models.CharField(blank=True, max_length=50, null=True, verbose_name='Dgree')),
                ('experns', models.IntegerField(blank=True, null=True, verbose_name='experns')),
                ('brith', models.DateField(blank=True, null=True, verbose_name='brithday')),
            ],
            options={
                'verbose_name': 'Mohmed',
                'verbose_name_plural': 'Mohmeds',
            },
        ),
        migrations.CreateModel(
            name='Namecl',
            fields=[
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pub_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='profile', verbose_name='imgg')),
                ('born', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
                ('pohon', models.CharField(blank=True, max_length=14, null=True)),
                ('alqsm', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Namecompany',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('pub_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('industry', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('year_founded', models.IntegerField()),
                ('about', models.TextField()),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='slug')),
                ('website', models.URLField()),
                ('logo', models.ImageField(upload_to='startup_logos/')),
                ('address', models.TextField()),
                ('employee_count', models.IntegerField()),
                ('founder', models.CharField(max_length=100)),
                ('founder_email', models.EmailField(max_length=254)),
                ('founder_phone', models.CharField(max_length=20)),
                ('video_pitch', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='viewblogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title:')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('img', models.ImageField(blank=True, null=True, upload_to='profilee', verbose_name='img')),
                ('body', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='body')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated_on')),
                ('active', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created ')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('catag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='catagry', to='home.catagry')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='home.viewblogs')),
                ('postore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postforyour', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
